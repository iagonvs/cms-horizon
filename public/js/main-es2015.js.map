{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/bateria-dialog/bateria-dialog.component.ts","./src/app/bateria-dialog/bateria-dialog.component.html","./src/app/bateria.service.ts","./src/app/bateria.ts","./src/app/bateria/bateria.component.ts","./src/app/bateria/bateria.component.html","./src/app/nota-dialog/nota-dialog.component.ts","./src/app/nota-dialog/nota-dialog.component.html","./src/app/nota.service.ts","./src/app/nota.ts","./src/app/nota/nota.component.ts","./src/app/nota/nota.component.html","./src/app/onda-dialog/onda-dialog.component.ts","./src/app/onda-dialog/onda-dialog.component.html","./src/app/onda.service.ts","./src/app/onda.ts","./src/app/onda/onda.component.ts","./src/app/onda/onda.component.html","./src/app/surfista-dialog/surfista-dialog.component.ts","./src/app/surfista-dialog/surfista-dialog.component.html","./src/app/surfista.service.ts","./src/app/surfista.ts","./src/app/surfista/surfista.component.ts","./src/app/surfista/surfista.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {SurfistaDialogComponent} from './surfista-dialog/surfista-dialog.component';\nimport { BateriaDialogComponent } from './bateria-dialog/bateria-dialog.component';\nimport { Surfista } from './surfista';\nimport { SurfistaService } from './surfista.service';\nimport { BateriaService } from './bateria.service';\nimport { Bateria } from './bateria';\nimport { OndaDialogComponent } from './onda-dialog/onda-dialog.component';\nimport { OndaService } from './onda.service';\nimport { Onda } from './onda';\nimport { NotaDialogComponent } from './nota-dialog/nota-dialog.component';\nimport { NotaService } from './nota.service';\nimport { Nota } from './nota';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Adicionando Surfista';\n  @Input() surfista: Surfista;\n  public surfistas: Surfista[];\n  public baterias: Bateria[];\n  public ondas: Onda[];\n  public notas: Nota[];\nconstructor(\n  public dialog: MatDialog,\n  public surfistaService: SurfistaService,\n  public bateriaService: BateriaService,\n  public ondaService: OndaService,\n  public notaService: NotaService){}\nngOnInit(){\n  this.surfistas = this.surfistaService.surfistas;\n  this.baterias = this.bateriaService.baterias;\n  this.ondas = this.ondaService.ondas;\n  this.notas = this.notaService.notas;\n}\n\n  openDialog(){\n    const dialogRef = this.dialog.open(SurfistaDialogComponent,{\n      width: '600px'\n    });\n    dialogRef.afterClosed().subscribe(\n      (result) => {\n        if (result){\n          this.surfistaService.salvar(result.surfista);\n        }\n      }\n    );\n  }\n\n  openDialog2(){\n    const dialogRef = this.dialog.open(BateriaDialogComponent,{\n      width: '600px'\n    });\n    dialogRef.afterClosed().subscribe(\n      (result) => {\n        if (result){\n          this.bateriaService.salvar(result.bateria);\n        }\n      }\n    );\n  }\n\n  openDialog3(){\n    const dialogRef = this.dialog.open(OndaDialogComponent,{\n      width: '600px'\n    });\n    dialogRef.afterClosed().subscribe(\n      (result) => {\n        if (result){\n          this.ondaService.salvar(result.onda);\n        }\n      }\n    );\n  }\n  openDialog4(){\n    const dialogRef = this.dialog.open(NotaDialogComponent,{\n      width: '600px'\n    });\n    dialogRef.afterClosed().subscribe(\n      (result) => {\n        if (result){\n          this.notaService.salvar(result.nota);\n        }\n      }\n    );\n  }\n}\n","<mat-toolbar color=\"primary\">\n    <span>Circiuto Mundial de Surf - 2020</span>\n</mat-toolbar>\n\n<mat-divider></mat-divider>\n<app-surfista></app-surfista>\n<app-bateria></app-bateria>\n<app-onda></app-onda>\n<app-nota></app-nota>\n\n\n<button mat-raised-button color=\"primary\" class=\"float-button\" (click)=\"openDialog()\">\n    Adicionar Surfista\n</button>\n\n<button mat-raised-button color=\"primary\" class=\"float-button-bateria\" (click)=\"openDialog2()\">\n    Adicionar Bateria\n</button>\n\n<button mat-raised-button color=\"primary\" class=\"float-button-onda\" (click)=\"openDialog3()\">\n    Adicionar Onda\n</button>\n\n<button mat-raised-button color=\"primary\" class=\"float-button-nota\" (click)=\"openDialog4()\">\n    Adicionar Nota\n\n</button>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SurfistaDialogComponent } from './surfista-dialog/surfista-dialog.component';\nimport { BateriaDialogComponent } from './bateria-dialog/bateria-dialog.component';\nimport { SurfistaComponent } from './surfista/surfista.component';\nimport { BateriaComponent } from './bateria/bateria.component';\nimport { OndaDialogComponent } from './onda-dialog/onda-dialog.component';\nimport { OndaComponent } from './onda/onda.component';\nimport { NotaComponent } from './nota/nota.component';\nimport { NotaDialogComponent } from './nota-dialog/nota-dialog.component';\nimport {MatGridListModule} from '@angular/material/grid-list';\n// import {MatTableModule} from '@angular/material/table';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SurfistaDialogComponent,\n    BateriaDialogComponent,\n    SurfistaComponent,\n    BateriaComponent,\n    OndaDialogComponent,\n    OndaComponent,\n    NotaComponent,\n    NotaDialogComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    FlexLayoutModule,\n    HttpClientModule,\n    // MatTableModule,\n    MatGridListModule,\n    MatButtonModule,\n    MatInputModule,\n    MatSelectModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatDividerModule,\n    MatDialogModule,\n    MatChipsModule,\n    MatBadgeModule,\n\n  ],\n  providers: [\n    \n  ],\n  entryComponents : [\n    SurfistaDialogComponent,\n    BateriaDialogComponent\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Bateria } from '../bateria';\nimport { Surfista } from '../surfista';\nimport { SurfistaService } from '../surfista.service';\n\n@Component({\n  selector: 'app-bateria-dialog',\n  templateUrl: './bateria-dialog.component.html',\n  styleUrls: ['./bateria-dialog.component.css']\n})\nexport class BateriaDialogComponent implements OnInit {\n  \n  public dados = {\n    bateria: new Bateria(\"\",\"\",\"\", \"\", \"\")\n  }\n\n  public surfistas: Surfista[];\n  constructor(\n    public dialogref: MatDialogRef<BateriaDialogComponent>,\n    public surfistaService: SurfistaService\n    \n\n  ) { }\n  ngOnInit(){\n    this.surfistas = this.surfistaService.surfistas;\n  }\n\n  salvar(){\n    this.dialogref.close(this.dados);\n  }\n\n\n}\n","<form class=\"example-form\">\n  <h1>Adicionar Bateria</h1>\n    <mat-form-field>\n        <mat-label>Surfista 1</mat-label>\n        <mat-select name=\"Surfista1\" [(ngModel)]=\"dados.bateria.Surfista1\">\n          <mat-option *ngFor=\"let s of surfistas\" value= {{s.numero}}>\n            {{s.nome}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n  \n      <mat-form-field>\n        <mat-label>Surfista 2</mat-label>\n        <mat-select name=\"Surfista2\"  [(ngModel)]=\"dados.bateria.Surfista2\">\n          <mat-option *ngFor=\"let s of surfistas\" value= {{s.numero}}>\n            {{s.nome}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    <button mat-button color=\"primary\" class=\"float-button\" (click)=\"salvar()\">\n      Adicionar Bateria\n    </button>\n  </form>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpEventType } from '@angular/common/http';\nimport { Bateria } from './bateria';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BateriaService {\n\n  public baterias: Bateria[] = [];\n\n  constructor(private http: HttpClient) {\n    this.http.get('/api/bateria/').subscribe(\n      (baterias: any[]) => {\n        for(let b of baterias){\n          this.baterias.push(\n            new Bateria(b.id ,b.Surfista1, b.Surfista2, b.s1, b.s2)\n            );\n        }\n      }\n    );\n   }\n\n   salvar(bateria: Bateria){\n    const uploadData = new FormData();\n    uploadData.append('Surfista1', bateria.Surfista1);\n    uploadData.append('Surfista2', bateria.Surfista2);\n    this.http.post('/api/bateria/store', uploadData).subscribe((event: any) => {\n      if (event.type == HttpEventType.Response){\n        console.log(event);\n      }\n    })\n  }\n\n}\n","export class Bateria {\r\n         \r\n    constructor(\r\n        public id: string,\r\n        public Surfista1: string,\r\n        public Surfista2: string,\r\n        public s1: string,\r\n        public s2: string\r\n    ) {}\r\n}","import { Component, OnInit, Input } from '@angular/core';\nimport { Surfista } from '../surfista';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SurfistaService } from '../surfista.service';\nimport { Bateria } from '../bateria';\nimport { BateriaService } from '../bateria.service';\n\n@Component({\n  selector: 'app-bateria',\n  templateUrl: './bateria.component.html',\n  styleUrls: ['./bateria.component.css']\n})\nexport class BateriaComponent implements OnInit {\n  @Input() bateria: Bateria;\n  public baterias: Bateria[];\n  public surfistas: Surfista[];\n  constructor(public dialog: MatDialog, public surfistaService: SurfistaService,\n    public bateriaService: BateriaService) { }\n\n  ngOnInit(){\n    this.surfistas = this.surfistaService.surfistas;\n    this.baterias = this.bateriaService.baterias;\n  }\n}\n","<h1>Baterias</h1>\r\n<table mat-table class=\"mat-elevation-z8\">\r\n  <thead>\r\n    <tr>\r\n      <th mat-header-cell> Bateria </th>\r\n      <th mat-header-cell> Surfista 1 </th>\r\n      <th mat-header-cell> Surfista 2 </th>\r\n\r\n    </tr>\r\n  </thead>\r\n  <tr *ngFor=\"let b of baterias\">\r\n\r\n    <ng-container matColumnDef=\"id\">\r\n      <td mat-cell> {{b.id}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"Surfista1\">\r\n      <td mat-cell> {{b.s1}}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"Surfista2\">\r\n      <td mat-cell>{{b.s2}} </td>\r\n    </ng-container>\r\n  </tr>\r\n\r\n</table>","import { Component, OnInit } from '@angular/core';\nimport { NotaService } from '../nota.service';\nimport { Nota } from '../nota';\nimport { OndaService } from '../onda.service';\nimport { Onda } from '../onda';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-nota-dialog',\n  templateUrl: './nota-dialog.component.html',\n  styleUrls: ['./nota-dialog.component.css']\n})\nexport class NotaDialogComponent implements OnInit {\n  public dados = {\n    nota: new Nota(\"\",\"\",\"\",\"\",\"\",\"\",\"\")\n  }\n\n  public ondas: Onda[];\n  public notas: Nota[];\n\n  constructor(\n    public dialogref: MatDialogRef<NotaDialogComponent>,\n    public ondaService: OndaService,\n    public notaService: NotaService\n\n  ) { }\n\n\n  ngOnInit(){\n    this.notas = this.notaService.notas;\n    this.ondas = this.ondaService.ondas;\n  }\n\n  salvar(){\n    this.dialogref.close(this.dados);\n  }\n\n}\n","<form class=\"example-form\">\n  <h1>Adicionar Nota</h1>\n    <mat-form-field>\n        <mat-label>Onda</mat-label>\n        <mat-select name=\"Onda\" [(ngModel)]=\"dados.nota.Onda\">\n          <mat-option *ngFor=\"let o of ondas\" value= {{o.id}}>\n            {{o.id}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n  \n    <mat-form-field class=\"example-full-width\">\n      <mat-label>Nota 1</mat-label>\n      <input matInput placeholder=\"Primeira nota\" name=\"notaParcial1\" [(ngModel)]=\"dados.nota.notaParcial1\">\n    </mat-form-field>\n\n    <mat-form-field class=\"example-full-width\">\n        <mat-label>Nota 2</mat-label>\n        <input matInput placeholder=\"Segunda nota\" name=\"notaParcial2\" [(ngModel)]=\"dados.nota.notaParcial2\">\n      </mat-form-field>\n\n      <mat-form-field class=\"example-full-width\">\n        <mat-label>Nota 3</mat-label>\n        <input matInput placeholder=\"Terceira nota\" name=\"notaParcial3\" [(ngModel)]=\"dados.nota.notaParcial3\">\n      </mat-form-field>\n    \n\n    <button mat-button color=\"primary\" class=\"float-button\" (click)=\"salvar()\">\n      Adicionar Nota\n    </button>\n  </form>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpEventType } from '@angular/common/http';\nimport { Nota } from './nota';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotaService {\n  public notas: Nota[] = [];\n  constructor(private http: HttpClient) {\n     this.http.get('/api/nota/notafinal').subscribe(\n    (notas: any[]) => {\n      for(let n of notas){\n        this.notas.push(\n          new Nota(n.notaParcial1, n.notaParcial2, n.notaParcial3, n.Onda, n.total, n.Bateria, n.Surfista)\n          );\n      }\n    }\n  ); \n\n}\nsalvar(nota: Nota){\n  const uploadData = new FormData();\n  uploadData.append('notaParcial1', nota.notaParcial1);\n  uploadData.append('notaParcial2', nota.notaParcial2);\n  uploadData.append('notaParcial3', nota.notaParcial3);\n  uploadData.append('Onda', nota.Onda);\n  this.http.post('/api/nota/store', uploadData).subscribe((event: any) => {\n    if (event.type == HttpEventType.Response){\n      console.log(event);\n    }\n  })\n}\n}\n","export class Nota {\r\n         \r\n    constructor(\r\n        public notaParcial1: string,\r\n        public notaParcial2: string,\r\n        public notaParcial3: string,\r\n        public Onda: string,\r\n        public total: string,\r\n        public Bateria: string,\r\n        public Surfista: string,\r\n    ) {}\r\n}","import { Component, OnInit, Input } from '@angular/core';\nimport { Nota } from '../nota';\nimport { Onda } from '../onda';\nimport { NotaService } from '../nota.service';\nimport { OndaService } from '../onda.service';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-nota',\n  templateUrl: './nota.component.html',\n  styleUrls: ['./nota.component.css']\n})\nexport class NotaComponent implements OnInit {\n  @Input() nota: Nota;\n  public notas: Nota[];\n  public ondas: Onda[];\n  \n  constructor(public dialog: MatDialog,\n     public notaService: NotaService,\n     public ondaService: OndaService) { }\n\n     ngOnInit(){\n      this.notas = this.notaService.notas;\n      this.ondas = this.ondaService.ondas;\n    }\n\n\n}\n","<h1>Notas</h1>\n<table mat-table class=\"mat-elevation-z8\">\n  <thead>\n    <tr>\n      <th mat-header-cell> Onda</th>\n      <th mat-header-cell> Bateria</th>\n      <th mat-header-cell> Numero do Surfista</th>\n      <th mat-header-cell> Nota Parcial 1 </th>\n      <th mat-header-cell> Nota Parcial 2 </th>\n      <th mat-header-cell> Nota Parcial 3 </th>\n      <th mat-header-cell> Média Parcial</th>\n\n    </tr>\n  </thead>\n  <tr *ngFor=\"let nota of notas\">\n\n    <ng-container matColumnDef=\"Onda\">\n      <td mat-cell>{{nota.Onda}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"Bateria\">\n      <td mat-cell> {{nota.Bateria}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"Surfista\">\n      <td mat-cell>{{nota.Surfista}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"notaParcial1\">\n      <td mat-cell>{{nota.notaParcial1}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"notaParcial2\">\n      <td mat-cell>{{nota.notaParcial2}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"notaParcial3\">\n      <td mat-cell>{{nota.notaParcial3}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"total\">\n      <td mat-cell>{{nota.total}}</td>\n    </ng-container>\n  </tr>\n\n</table>","import { Component, OnInit } from '@angular/core';\nimport { Bateria } from '../bateria';\nimport { Surfista } from '../surfista';\nimport { SurfistaService } from '../surfista.service';\nimport { BateriaService } from '../bateria.service';\nimport { Onda } from '../onda';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { OndaService } from '../onda.service';\n\n@Component({\n  selector: 'app-onda-dialog',\n  templateUrl: './onda-dialog.component.html',\n  styleUrls: ['./onda-dialog.component.css']\n})\nexport class OndaDialogComponent implements OnInit {\n  public dados = {\n    onda: new Onda(\"\",\"\",\"\", \"\")\n  }\n  public ondas: Onda[];\n  public surfistas: Surfista[];\n  public baterias: Bateria[];\n  constructor(\n    public dialogref: MatDialogRef<OndaDialogComponent>,\n    public surfistaService: SurfistaService,\n    public bateriaService: BateriaService,\n    public ondaService: OndaService\n\n  ) { }\n\n  ngOnInit(){\n    this.surfistas = this.surfistaService.surfistas;\n    this.baterias = this.bateriaService.baterias;\n    this.ondas = this.ondaService.ondas;\n  }\n\n  salvar(){\n    this.dialogref.close(this.dados);\n  }\n\n}\n","<form class=\"example-form\">\n  <h1>Adicionar Onda</h1>\n    <mat-form-field>\n        <mat-label>Bateria</mat-label>\n        <mat-select name=\"Bateria\" [(ngModel)]=\"dados.onda.Bateria\">\n          <mat-option *ngFor=\"let b of baterias\" value= {{b.id}}>\n            {{b.id}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n  \n      <mat-form-field>\n        <mat-label>Surfista</mat-label>\n        <mat-select name=\"Surfista\"  [(ngModel)]=\"dados.onda.Surfista\">\n          <mat-option *ngFor=\"let s of surfistas\" value= {{s.numero}}>\n            {{s.nome}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    <button mat-button color=\"primary\" class=\"float-button\" (click)=\"salvar()\">\n      Adicionar Onda\n    </button>\n  </form>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpEventType } from '@angular/common/http';\nimport { Onda } from './onda';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OndaService {\n  public ondas: Onda[] = [];\n  constructor(private http: HttpClient) {\n    this.http.get('/api/onda/').subscribe(\n      (ondas: any[]) => {\n        for(let o of ondas){\n          this.ondas.push(\n            new Onda(o.id ,o.Bateria, o.Surfista, o.nome)\n            );\n        }\n      }\n    );\n   }\n   salvar(onda: Onda){\n    const uploadData = new FormData();\n    uploadData.append('Bateria', onda.Bateria);\n    uploadData.append('Surfista', onda.Surfista);\n    this.http.post('/api/onda/store', uploadData).subscribe((event: any) => {\n      if (event.type == HttpEventType.Response){\n        console.log(event);\n      }\n    })\n  }\n}\n","export class Onda {\r\n         \r\n    constructor(\r\n        public id: string,\r\n        public Bateria: string,\r\n        public Surfista: string,\r\n        public nome: string\r\n    ) {}\r\n}","import { Component, OnInit, Input } from '@angular/core';\nimport { Surfista } from '../surfista';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SurfistaService } from '../surfista.service';\nimport { Bateria } from '../bateria';\nimport { BateriaService } from '../bateria.service';\nimport { Onda } from '../onda';\nimport { OndaService } from '../onda.service';\n\n@Component({\n  selector: 'app-onda',\n  templateUrl: './onda.component.html',\n  styleUrls: ['./onda.component.css']\n})\nexport class OndaComponent implements OnInit {\n  @Input() onda: Onda;\n  public baterias: Bateria[];\n  public surfistas: Surfista[];\n  public ondas: Onda[];\n  constructor(public dialog: MatDialog, public surfistaService: SurfistaService,\n    public bateriaService: BateriaService, public ondaService: OndaService) { }\n\n    ngOnInit(){\n      this.surfistas = this.surfistaService.surfistas;\n      this.baterias = this.bateriaService.baterias;\n      this.ondas = this.ondaService.ondas;\n    }\n}\n","<h1>Ondas</h1>\n<table mat-table class=\"mat-elevation-z8\">\n  <thead>\n    <tr>\n      <th mat-header-cell> Onda </th>\n      <th mat-header-cell> Bateria </th>\n      <th mat-header-cell> Surfista </th>\n\n    </tr>\n  </thead>\n  <tr *ngFor=\"let onda of ondas\">\n\n    <ng-container matColumnDef=\"id\">\n      <td mat-cell> {{onda.id}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"Bateria\">\n      <td mat-cell> {{onda.Bateria}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"Surfista\">\n      <td mat-cell>{{onda.nome}} </td>\n    </ng-container>\n  </tr>\n\n</table>","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Surfista } from '../surfista';\n\n@Component({\n  selector: 'app-surfista-dialog',\n  templateUrl: './surfista-dialog.component.html',\n  styleUrls: ['./surfista-dialog.component.css']\n})\nexport class SurfistaDialogComponent implements OnInit {\n\n  public dados = {\n    surfista: new Surfista(\"\", \"\",\"\")\n  }\n\n\n  constructor(\n    public dialogref: MatDialogRef<SurfistaDialogComponent>\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  salvar(){\n    this.dialogref.close(this.dados);\n  }\n\n}\n","<form class=\"example-form\">\n  <h1>Adicionar Surfista</h1>\n    <mat-form-field class=\"example-full-width\">\n      <mat-label>Nome do Surfista</mat-label>\n      <input matInput placeholder=\"Digite o nome\" name=\"nome\" [(ngModel)]=\"dados.surfista.nome\">\n    </mat-form-field>\n  \n    <mat-form-field class=\"example-full-width\">\n      <mat-label>País</mat-label>\n      <input matInput placeholder=\"Ex: Brasil, EUA, etc\" name=\"pais\" [(ngModel)]=\"dados.surfista.pais\">\n      <!-- <textarea matInput placeholder=\"Ex: Brasil, EUA, etc\"></textarea> -->\n    </mat-form-field>\n    <button mat-button color=\"primary\" class=\"float-button\" (click)=\"salvar()\">\n      Adicionar Surfista\n    </button>\n  </form>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpEventType, HttpEvent } from '@angular/common/http';\nimport { Surfista } from './surfista';\nimport { ThrowStmt } from '@angular/compiler';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SurfistaService {\n\n  public surfistas: Surfista[] = [];\n\n  constructor(private http: HttpClient) {\n    this.http.get('/api/').subscribe(\n      (surfistas: any[]) => {\n        for(let s of surfistas){\n          this.surfistas.push(\n            new Surfista(s.numero, s.nome, s.pais)\n            );\n        }\n      }\n    );\n   }\n\n   salvar(surfista: Surfista){\n     const uploadData = new FormData();\n     uploadData.append('nome', surfista.nome);\n     uploadData.append('pais', surfista.pais);\n     this.http.post('/api', uploadData).subscribe((event: any) => {\n       if (event.type == HttpEventType.Response){\n         console.log(event);\n       }\n     })\n   }\n\n}\n","export class Surfista {\r\n         \r\n    constructor(\r\n        public numero: string,\r\n        public nome: string,\r\n        public pais: string\r\n    ) {}\r\n}","import { Component, OnInit, Input } from '@angular/core';\nimport { Surfista } from '../surfista';\nimport { SurfistaService } from '../surfista.service';\n\n@Component({\n  selector: 'app-surfista',\n  templateUrl: './surfista.component.html',\n  styleUrls: ['./surfista.component.css']\n})\nexport class SurfistaComponent implements OnInit {\n\n  @Input() surfista: Surfista;\n  public surfistas: Surfista[];\n  constructor(public surfistaService: SurfistaService,) { }\n\n  ngOnInit(){\n    this.surfistas = this.surfistaService.surfistas;\n  }\n}\n","<h1>Surfistas</h1>\n<table mat-table class=\"mat-elevation-z8\">\n  <thead>\n    <tr>\n      <th mat-header-cell> Nome do Surfista </th>\n      <th mat-header-cell> Numero do Surfista </th>\n      <th mat-header-cell> País do Surfista </th>\n\n    </tr>\n  </thead>\n  <tr *ngFor=\"let s of surfistas\">\n\n    <ng-container matColumnDef=\"nome\">\n      <td mat-cell> {{s.nome}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"numero\">\n      <td mat-cell> {{s.numero}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"pais\">\n      <td mat-cell>{{s.pais}} </td>\n    </ng-container>\n  </tr>\n\n</table>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}